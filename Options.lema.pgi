# compiler
F90      = ftn -D__PGI_FORTRAN__

# linker
LD       = $(F90)

# global compilation flags
FFLAGS   = -Kieee # Use IEEE division, optionally enable traps
FFLAGS  += -Mfree # Assume free-format source
FFLAGS  += -Mdclchk # check that all variables are declared

# verbose compilation flags
VFLAGS   = -v # displays invocations of compiler, assembler and linker
VFLAGS  += -Minform=inform # display all error messages (inform, warn, severe and fatal)
VFLAGS  += -Minfo=all # display all information (accel,inline,ipa,loop,lre,mp,opt,par,vect)
VFLAGS  += -Mneginfo=all # display all negative information (see above)
#VFLAGS  += -Mkeepasm # preserve assembly language file

# force preprocessing flags
PFLAGS   = -Mpreprocess # perform preprocessing for all source files
#PFLAGS  += -DSINGLEPRECISION # run model in single precision
#PFLAGS  += -DTEND # additional diagnostic fields for physics tendencies

# optimization flags (FOPT0=none, FOPT1=strong, FOPT2=strongest)
FOPT0    = -O0 # inhibit any optimizations

FOPT1    = -O3 # aggressive global optimization
FOPT1   += -fast # common optimizations (includes -O2 -Mvect=sse -Mlre -Mautoinline)
FOPT1   += -Mvect=noassoc # dissallow associative transformations (OBSOLETE?)
#FOPT1   += -Mvect=noaltcode # generate only vectorized code
#FOPT1   += -Msmartalloc # enable optimized malloc routines
#FOPT1   += -Mprefetch=distance:8 # set prefetch-ahead distance in cache lines
FOPT1   += -Mipa=fast,inline # interprocedural analysis (automatically inline)

FOPT2    = $(FOPT1)

# debugging flags
FDBG     = -O0 # inhibit any optimizations
FDBG    += -g # generate information for debugger (disable optimizations)
FDBG    += -C # array bounds checking (== -Mbounds)
FDBG    += -Mchkfpstk # check consistency of floating point stack at subprogram calls
FDBG    += -Mchkptr # check of NULL pointer references
FDBG    += -Ktrap=fp # enable floating point exceptions (inv,divz,ovf)
FDBG    += -traceback # add debug information for runtime traceback
FDBG    += -Mdepchk # check dependence relations for vector or parallel code
#FDBG    += -Mstandard # check standard conformance
FDBG    += -Mchkstk # check for sufficient stack space upon subprogram entry
FDBG    += -Meh_frame # preserve exception-handling frame information (export PGI_TERM=trace)

# global linking flags
LFLAGS   = 

# global libraries and includes
LIB      = 

INC      = -I.
INC     += -I$(ROOT)/$(SRCDIR)
INC     += -I$(MPICH_DIR)/include

# optimized flags, libraries and includes
OPTL     = 
OPTI     = 

# debugging flags, libraries and includes
DBGL     = 
DBGI     = 

# MPI library
MPIL     = 
MPII     = -D__MPICH2

# Grib1 library
GRIBDWDL = -L/oprusers/osm/lib -lgrib1_v1.17_cn_pgi13.6.0
GRIBDWDI = 

# Grib-API library
GRIBAPIL = -L/oprusers/osm/lib/libgrib_api_1.11.0.1_pgi13.6.0/lib -lgrib_api_f90 -lgrib_api -L/oprusers/osm/lib/libjasper_1.900.1_gnu/lib -ljasper
GRIBAPII = -I/oprusers/osm/lib/libgrib_api_1.11.0.1_pgi13.6.0/include

# NetCDF library
NETCDFL  = 
NETCDFI  = 

# Synsat library
RTTOV7L  = -L/oprusers/osm/lib -lRTTOV7_synsat_pgi13.6.0
RTTOV7I  = 
RTTOV10L = 
RTTOV10I = 

